# Build stage
FROM node:20-alpine AS builder

WORKDIR /app

# Build arguments para variáveis de ambiente
ARG VITE_SUPABASE_URL
ARG VITE_SUPABASE_API_URL
ARG VITE_SUPABASE_AUTH_URL
ARG VITE_SUPABASE_ANON_KEY
ARG VITE_SERPRO_CPF_API_KEY
ARG VITE_SERPRO_CPF_API_URL
ARG VITE_MINIO_ENDPOINT
ARG VITE_MINIO_ACCESS_KEY
ARG VITE_MINIO_SECRET_KEY
ARG VITE_MINIO_BUCKET
ARG VITE_ASAAS_API_KEY
ARG VITE_ASAAS_ENV
ARG VITE_ASAAS_WEBHOOK_SECRET
ARG VITE_APP_URL
ARG VITE_STRIPE_PUBLIC_KEY

# Definir as variáveis de ambiente para o build
ENV VITE_SUPABASE_URL=$VITE_SUPABASE_URL
ENV VITE_SUPABASE_API_URL=$VITE_SUPABASE_API_URL
ENV VITE_SUPABASE_AUTH_URL=$VITE_SUPABASE_AUTH_URL
ENV VITE_SUPABASE_ANON_KEY=$VITE_SUPABASE_ANON_KEY
ENV VITE_SERPRO_CPF_API_KEY=$VITE_SERPRO_CPF_API_KEY
ENV VITE_SERPRO_CPF_API_URL=$VITE_SERPRO_CPF_API_URL
ENV VITE_MINIO_ENDPOINT=$VITE_MINIO_ENDPOINT
ENV VITE_MINIO_ACCESS_KEY=$VITE_MINIO_ACCESS_KEY
ENV VITE_MINIO_SECRET_KEY=$VITE_MINIO_SECRET_KEY
ENV VITE_MINIO_BUCKET=$VITE_MINIO_BUCKET
ENV VITE_ASAAS_API_KEY=$VITE_ASAAS_API_KEY
ENV VITE_ASAAS_ENV=$VITE_ASAAS_ENV
ENV VITE_ASAAS_WEBHOOK_SECRET=$VITE_ASAAS_WEBHOOK_SECRET
ENV VITE_APP_URL=$VITE_APP_URL
ENV VITE_STRIPE_PUBLIC_KEY=$VITE_STRIPE_PUBLIC_KEY

# Configurar Node.js para builds com mais memória
ENV NODE_OPTIONS="--max-old-space-size=8192"

# Copiar arquivos de dependências primeiro (para cache)
COPY package*.json ./
COPY tsconfig*.json ./
COPY vite.config.ts ./
COPY postcss.config.js ./
COPY tailwind.config.js ./

# Instalar dependências
RUN npm ci --no-audit --prefer-offline --no-fund

# Copiar código fonte
COPY index.html .
COPY src ./src
COPY public ./public

# Build da aplicação (as variáveis serão injetadas no build)
RUN npm run build

# Production stage
FROM nginx:stable-alpine

# Instalar curl para healthcheck
RUN apk add --no-cache curl

# Copiar arquivos construídos
COPY --from=builder /app/dist /usr/share/nginx/html

# Copiar configuração do nginx
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Configurar permissões
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /etc/nginx/conf.d && \
    touch /var/run/nginx.pid && \
    chown -R nginx:nginx /var/run/nginx.pid

# Healthcheck
HEALTHCHECK --interval=30s --timeout=3s \
  CMD curl -f http://localhost/ || exit 1

# Executar como usuário não-root
USER nginx

# Expor a porta 80
EXPOSE 80

# Iniciar nginx
CMD ["nginx", "-g", "daemon off;"]